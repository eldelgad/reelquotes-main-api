name: Deploy Main API to Staging

on:
  push:
    branches: [ develop ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: reelquotes-main-api
  ECS_CLUSTER: ReelQuotesCluster
  ECS_SERVICE: MainApiService
  CONTAINER_NAME: NestJsContainer

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract git commit SHA
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:${{ steps.vars.outputs.sha }} .
          docker tag $ECR_REPOSITORY:${{ steps.vars.outputs.sha }} ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:${{ steps.vars.outputs.sha }}

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:${{ steps.vars.outputs.sha }}

      - name: Download ECS task definition
        run: |
          aws ecs describe-task-definition --task-definition $ECS_SERVICE > task-def.json

      - name: Update task definition with new image
        run: |
          jq --arg IMAGE "${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:${{ steps.vars.outputs.sha }}" '.taskDefinition.containerDefinitions[0].image = $IMAGE' task-def.json > new-task-def.json

      - name: Register new task definition
        id: register-task-def
        run: |
          aws ecs register-task-definition --cli-input-json file://new-task-def.json > task-def-out.json
          echo "taskDefArn=$(jq -r .taskDefinition.taskDefinitionArn task-def-out.json)" >> $GITHUB_OUTPUT

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --task-definition ${{ steps.register-task-def.outputs.taskDefArn }}
